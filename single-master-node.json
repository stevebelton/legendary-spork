{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.1",
  "parameters": {
    "adminUserName": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Admin user name for the VM"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for the VM (A mix of upper and lower-case characters, digits and symbols)"
      }
    },
    "dnsNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique public DNS name where the VM will be exposed"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "westeurope",
      "allowedValues": [
        "westeurope"
      ],
      "metadata": {
        "description": "Location where resources will be provisioned (must support premium storage)"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "metadata": {
        "description": "The type of the Storage Account to be created (Default to Premium_LRS)"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "corevnet-sub6",
      "metadata": {
        "description": "The name of the virtual network provisioned for the deployment"
      }
    },
    "virtualNetworkRGName": {
      "type": "string",
      "defaultValue": "CoreNetwork-Sub6",
      "metadata": {
        "description": "Resource Group Name for Vnet. For new VNet leave it empty, otherwise type in existing resource group name"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "cloudera-trusted",
      "metadata": {
        "description": "Subnet name for the virtual network where resources will be provisioned"
      }
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.155.0.0/16",
      "metadata": {
        "description": "Virtual Network address CIDR"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.155.14.0/24",
      "metadata": {
        "description": "CIDR for the subnet where the VM will be placed"
      }
    },
    "masterNodeIPAddress": {
      "type": "string",
      "defaultValue": "10.155.14.4",
      "metadata": {
        "description": "IP address of the first master node"
      }
    },
    "dataNodeIPAddress": {
      "type": "string",
      "defaultValue": "10.155.14.9",
      "metadata": {
        "description": "IP address of the first data node"
      }
    },
    "currentNodeIPAddress": {
      "type": "string",
      "defaultValue": "10.155.14.6",
      "metadata": {
        "description": "IP address of the next master node"
      }
    },
    "mnvmSize": {
      "type": "string",
      "defaultValue": "Standard_DS14",
      "metadata": {
        "description": "The size of the Master VMs deployed in the cluster (defaults to Standard_DS14)"
      }
    },
    "tshirtSize": {
      "type": "string",
      "defaultValue": "Prod",
      "allowedValues": [
        "Dev",
        "Prod"
      ],
      "metadata": {
        "description": "T-shirt size of the Cloudera cluster (Dev, Prod)"
      }
    },
    "numberOfDataNodes": {
      "type": "int",
      "defaultValue": 5,
      "metadata": {
        "description": "Number of data nodes for Prod (defaults to 3)"
      }
    },
    "numberOfMasterNodes": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of master nodes for Prod (defaults to 2)"
      }
    },
    "vmSuffix": {
      "type": "int",
      "metadata": {
        "description": "The next ID to use for the additional VM"
      }
    }
  },
  "variables": {
    "templateAPIVersion": "2015-11-01",
    "resourceAPIVersion": "2015-06-15",
    "addressPrefix": "[parameters('addressPrefix')]",
    "subnetPrefix": "[parameters('subnetPrefix')]",
    "scriptsUri": "https://raw.githubusercontent.com/stevebelton/legendary-spork/master",
    "storageAccount": {
      "type": "[parameters('storageAccountType')]"
    },
    "vmSpec": {
      "masterNodeVMSize": "[parameters('mnvmSize')]",
      "adminUserName": "[parameters('adminUserName')]",
      "adminPassword": "[parameters('adminPassword')]",
      "masterNodeASName": "[concat(parameters('dnsNamePrefix'), 'asmn')]"
    },
    "networkSpec": {
      "addressPrefix": "[variables('addressPrefix')]",
      "subnetPrefix": "[variables('subnetPrefix')]",
      "masterIP": "[parameters('masterNodeIPAddress')]",
      "workerIP": "[parameters('dataNodeIPAddress')]",
      "currentIP": "[parameters('currentNodeIPAddress')]",
      "virtualNetworkName": "[parameters('virtualNetworkName')]",
      "virtualNetworkRGName": "[parameters('virtualNetworkRGName')]",
      "vnetNewOrExisting": "existing",
      "virtualNetworkSubnetName": "[parameters('subnetName')]"
    },
    "clusterTshirtSizeDev": {
      "masterNodeCount": "1",
      "dataNodeCount": "1",
      "highAvailability": "false"
    },
    "clusterTshirtSizeProd": {
      "masterNodeCount": "[parameters('numberOfMasterNodes')]",
      "dataNodeCount": "[parameters('numberOfDataNodes')]",
      "highAvailability": "true"
    },
    "clusterSpec": "[variables(concat('clusterTshirtSize', parameters('tshirtSize')))]",
    "existingVNetId": "[resourceId(parameters('virtualNetworkRGName'),concat('Microsoft.Network','/','virtualNetworks'),parameters('virtualNetworkName'))]",
    "VNetId": "[variables('existingVNetId')]",
    "masterIP": "[variables('networkSpec').masterIP]",
    "workerIP": "[variables('networkSpec').workerIP]",
    "currentIP": "[variables('networkSpec').currentIP]",
    "vmName": "[concat(parameters('dnsNamePrefix'), 'vldenn')]",
    "nicName": "[concat(parameters('dnsNamePrefix'), 'nidemn')]",
    "storageAccountName": "[concat(parameters('dnsNamePrefix'), 'sademn')]",
    "securityGroupName": "[concat(parameters('dnsNamePrefix'), 'ngdemn')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('storageAccountName'), parameters('vmSuffix'))]",
      "apiVersion": "[variables('resourceAPIVersion')]",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[variables('storageAccount').type]"
      }
    },
    {
      "apiVersion": "[variables('resourceAPIVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), parameters('vmSuffix'))]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('currentIP')]",
              "subnet": {
                "id": "[concat(variables('vnetID'), '/subnets/', variables('networkSpec').virtualNetworkSubnetName)]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('securityGroupName'))]"
        }
      }
    },
    {
      "apiVersion": "[variables('resourceAPIVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'), parameters('vmSuffix'))]",
      "plan": {
        "name": "cloudera-centos-6",
        "publisher": "cloudera",
        "product": "cloudera-centos-6"
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), parameters('vmSuffix'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'), parameters('vmSuffix'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('vmSpec').masterNodeASName)]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSpec').masterNodeVMSize]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmName'), parameters('vmSuffix'), '.', parameters('location'), '.cloudapp.azure.com')]",
          "adminUsername": "[variables('vmSpec').adminUserName]",
          "adminPassword": "[variables('vmSpec').adminPassword]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "false"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "cloudera",
            "offer": "cloudera-centos-6",
            "sku": "CLOUDERA-CENTOS-6",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('storageAccountName'), parameters('vmSuffix'), '.blob.core.windows.net/vhds/', variables('vmName'), parameters('vmSuffix'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk0",
              "diskSizeGB": "1023",
              "lun": 0,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), parameters('vmSuffix'), '.blob.core.windows.net/vhds0/', variables('vmName'), '-datadisk0.vhd')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk1",
              "diskSizeGB": "1023",
              "lun": 1,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), parameters('vmSuffix'), '.blob.core.windows.net/vhds1/', variables('vmName'), '-datadisk1.vhd')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk2",
              "diskSizeGB": "1023",
              "lun": 2,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), parameters('vmSuffix'), '.blob.core.windows.net/vhds2/', variables('vmName'), '-datadisk2.vhd')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk3",
              "diskSizeGB": "1023",
              "lun": 3,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), parameters('vmSuffix'), '.blob.core.windows.net/vhds3/', variables('vmName'), '-datadisk3.vhd')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk4",
              "diskSizeGB": "1023",
              "lun": 4,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), parameters('vmSuffix'), '.blob.core.windows.net/vhds4/', variables('vmName'), '-datadisk4.vhd')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk5",
              "diskSizeGB": "1023",
              "lun": 5,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), parameters('vmSuffix'), '.blob.core.windows.net/vhds5/', variables('vmName'), '-datadisk5.vhd')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk6",
              "diskSizeGB": "1023",
              "lun": 6,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), parameters('vmSuffix'), '.blob.core.windows.net/vhds6/', variables('vmName'), '-datadisk6.vhd')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk7",
              "diskSizeGB": "1023",
              "lun": 7,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), parameters('vmSuffix'), '.blob.core.windows.net/vhds7/', variables('vmName'), '-datadisk7.vhd')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk8",
              "diskSizeGB": "1023",
              "lun": 8,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), parameters('vmSuffix'), '.blob.core.windows.net/vhds8/', variables('vmName'), '-datadisk8.vhd')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk9",
              "diskSizeGB": "1023",
              "lun": 9,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), parameters('vmSuffix'), '.blob.core.windows.net/vhds9/', variables('vmName'), '-datadisk9.vhd')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk10",
              "diskSizeGB": "1023",
              "lun": 10,
              "vhd": {
                "uri": "[concat('http://', variables('storageAccountName'), parameters('vmSuffix'), '.blob.core.windows.net/vhds10/', variables('vmName'), '-datadisk10.vhd')]"
              },
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), parameters('vmSuffix')))]"
            }
          ],
          "inputEndpoints": [
            {
              "enableDirectServerReturn": "False",
              "endpointName": "HDFS.dn.Web.UI",
              "privatePort": 50075,
              "publicPort": 50075,
              "protocol": "tcp"
            },
            {
              "enableDirectServerReturn": "False",
              "endpointName": "YARN.nm.Web.UI",
              "privatePort": 8042,
              "publicPort": 8042,
              "protocol": "tcp"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), parameters('vmSuffix'), '/prepareDisks')]",
      "apiVersion": "[variables('resourceAPIVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), parameters('vmSuffix'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(variables('scriptsUri'), '/scripts/prepare-masternode-disks.sh')]",
            "[concat(variables('scriptsUri'), '/scripts/initialize-node.sh')]"
          ],
          "commandToExecute": "[concat('sh initialize-node.sh \"', variables('masterIP'), '\" \"', variables('workerIP'), '\" \"', parameters('dnsNamePrefix'), '\" \"', concat(parameters('location'),'.cloudapp.azure.com'), '\" ', variables('clusterSpec').masterNodeCount, ' ', variables('clusterSpec').dataNodeCount, ' \"', variables('vmSpec').adminUserName, '\" ', 'masternode', ' >> /home/$ADMINUSER/initialize-masternode.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "fqdn": {
      "type": "string",
      "value": "[concat(variables('vmName'), parameters('vmSuffix'), '.', parameters('location'),'.cloudapp.azure.com')]"
    }
  }
}